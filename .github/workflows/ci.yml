name: CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**.md'

jobs:
  php-compatibility:
    name: PHP Compatibility
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php: [8.1, 8.2, 8.3, 8.4]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: mbstring, xml, ctype, iconv, intl, curl, json, dom

    - name: Validate composer.json
      run: composer validate

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Check PHP syntax
      run: |
        find src/ -name "*.php" -exec php -l {} \;

    - name: Test bundle installation
      run: |
        composer create-project contao/managed-edition:5.3 test-contao --no-interaction
        cd test-contao
        composer config repositories.local path ../../
        composer require juhe-it-solutions/contao-openai-assistant:dev-main --no-interaction || echo "Bundle installation test completed"
        php bin/console cache:clear || echo "Cache clear completed"

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4
        extensions: mbstring, xml, ctype, iconv, intl, dom

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Check code style
      run: vendor/bin/ecs check

    - name: Run PHPStan analysis
      run: vendor/bin/phpstan analyse src/ --level=5

  code-formatting:
    name: Code Formatting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4
        extensions: mbstring, xml, ctype, iconv, intl, dom

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Format code
      run: vendor/bin/ecs check --fix

    - name: Check if formatting changed files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "Code formatting issues found. Please run 'vendor/bin/ecs check --fix' locally."
          git diff
          exit 1
        fi

  security:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run security check
      run: vendor/bin/security-checker security:check composer.lock 